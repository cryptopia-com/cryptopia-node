name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: testing

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up SSH agent with the private key from secrets
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}

    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    # Deploy to DigitalOcean Droplet
    - name: Deploy to Droplet
      env:
        SERVER_IP: ${{ secrets.DIGITALOCEAN_SERVER_IP }}
        APPLICATION_INSIGHTS_CONNECTION_STRING: ${{ secrets.APPLICATION_INSIGHTS_CONNECTION_STRING }}
      run: |
        # Connect to the server using SSH
        ssh -o StrictHostKeyChecking=no root@$SERVER_IP << EOF
          # Export environment variables
          export APPLICATION_INSIGHTS_CONNECTION_STRING=${APPLICATION_INSIGHTS_CONNECTION_STRING}
          export PUBLIC_IP=${SERVER_IP}
          
          # Navigate to the application directory
          cd /root/cryptopia-node

          # Stop running Docker containers
          docker-compose down
          
          # Reclaim disk space
          docker system prune -af
          docker volume prune -f
          docker network prune -f
          rm -rf /var/log/*log

          # Clear Git cache and unnecessary files
          git gc --prune=now
          git clean -fdx
          
          # Remove any leftover temporary files
          rm -rf /tmp/*

          # Remove old environment file and create a new one
          rm -f .env
          echo "APPLICATION_INSIGHTS_CONNECTION_STRING=${APPLICATION_INSIGHTS_CONNECTION_STRING}" > .env
          echo "PUBLIC_IP=${SERVER_IP}" >> .env
          
          # Fetch the latest changes from the repository and update the local repository
          git fetch origin
          git checkout master
          git rebase origin/master
          git pull origin master
          
          # Build and run the Docker containers
          docker-compose up -d --build
        EOF
